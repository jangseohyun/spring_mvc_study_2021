SELECT USER
FROM DUAL;
--==>> SCOTT


--○ 테이블 생성(TBL_STUDENT)
CREATE TABLE TBL_STUDENT
( SID       NUMBER
, NAME      VARCHAR2(30)
, TEL       VARCHAR2(40)
, CONSTRAINT SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_STUDENT이(가) 생성되었습니다.


--○ 시퀀스 생성(STUDENTSEQ)
CREATE SEQUENCE STUDENTSEQ
NOCACHE;
--==>> Sequence STUDENTSEQ이(가) 생성되었습니다.


--○ 데이터 입력(TBL_STDUENT)
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTSEQ.NEXTVAL, '장서현', '010-1111-1111');


--○ 커밋
COMMIT;


--○ 테이블 생성(TBL_GRADE)
CREATE TABLE TBL_GRADE
( SID       NUMBER
, SUB1      NUMBER(3)
, SUB2      NUMBER(3)
, SUB3      NUMBER(3)
, CONSTRAINT GRD_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRD_SID_FK FOREIGN KEY(SID) REFERENCES TBL_STUDENT(SID)
);
--==>> Table TBL_GRADE이(가) 생성되었습니다.


--○ 뷰 생성(STUDENTVIEW)
CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT S.SID AS SID, S.NAME AS NAME, S.TEL AS TEL,
(SELECT COUNT(*)
FROM TBL_GRADE G
WHERE S.SID = G.SID) AS SUB
FROM TBL_STUDENT S;
--==>> View STUDENTVIEW이(가) 생성되었습니다.


--○ 뷰 조회(STUDENTVIEW)
SELECT SID, NAME, TEL, SUB
FROM STUDENTVIEW;


--○ 뷰 생성(STUDENTGRADE)
CREATE OR REPLACE VIEW STUDENTGRADE
AS
SELECT S.SID, S.NAME, G.SUB1, G.SUB2, G.SUB3
, (G.SUB1+G.SUB2+G.SUB3) AS TOT
, ((G.SUB1+G.SUB2+G.SUB3)/3.0) AS AVG
, CASE
    WHEN ((G.SUB1+G.SUB2+G.SUB3)/3.0)<60 THEN '불합'
    WHEN G.SUB1<50 OR G.SUB2<50 OR G.SUB3<50 THEN '과락'
    ELSE '합격'
  END AS CH
FROM TBL_STUDENT S, TBL_GRADE G
WHERE S.SID=G.SID;
--==>> View STUDENTGRADE이(가) 생성되었습니다.